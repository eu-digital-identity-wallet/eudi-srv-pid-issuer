version: '3.8'

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: "exit 0"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:nightly
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      - KC_PROXY=edge
      - KC_HTTP_RELATIVE_PATH=/idp
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTPS_CERTIFICATE_FILE=/etc/ssl/certs/keycloak.tls.crt
      - KC_HTTPS_CERTIFICATE_KEY_FILE=/etc/ssl/certs/keycloak.tls.key
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_SPI_THEME_STATIC_MAX_AGE=-1
      - KC_SPI_THEME_CACHE_THEMES=false
      - KC_SPI_THEME_CACHE_TEMPLATES=false
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
    healthcheck:
      test: "bash /opt/keycloak/health-check.sh"
      interval: 5s
      timeout: 10s
      retries: 12
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./keycloak-extra/health-check.sh:/opt/keycloak/health-check.sh
      - ./keycloak-realms/:/opt/keycloak/data/import
      - ./keycloak-themes/:/opt/keycloak/themes
      - ./keycloak-certs/:/etc/ssl/certs/
    networks:
      - default

  pid-issuer:
    image: ghcr.io/eu-digital-identity-wallet/eudi-srv-pid-issuer:edge
    pull_policy: always
    container_name: pid-issuer
    depends_on:
      keycloak:
        condition: service_healthy
    command:
      - --spring.profiles.active=insecure
      - --spring.webflux.base-path=/pid-issuer
      - --issuer.publicUrl=https://localhost/pid-issuer
      - --issuer.authorizationServer=https://localhost/idp/realms/pid-issuer-realm
      - --issuer.authorizationServer.introspection=https://keycloak:8443/idp/realms/pid-issuer-realm/protocol/openid-connect/token/introspect
      - --issuer.authorizationServer.userinfo=https://keycloak:8443/idp/realms/pid-issuer-realm/protocol/openid-connect/userinfo
      - --issuer.pid.mso_mdoc.enabled=true
      - --issuer.pid.mso_mdoc.encoderUrl=https://preprod.issuer.eudiw.dev/formatter/cbor
      - --issuer.pid.sd_jwt_vc.enabled=true
      - --issuer.pid.sd_jwt_vc.deferred=true
      - --issuer.pid.issuingCountry=FC
      - --spring.security.oauth2.resourceserver.opaquetoken.client-id=pid-issuer-srv
      - --spring.security.oauth2.resourceserver.opaquetoken.client-secret=zIKAV9DIIIaJCzHCVBPlySgU8KgY68U2
    networks:
      - default

  haproxy:
    image: haproxy:2.8.3
    container_name: haproxy
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      keycloak:
        condition: service_healthy
      pid-issuer:
        condition: service_started
    volumes:
      - ./haproxy/haproxy.conf:/usr/local/etc/haproxy/haproxy.cfg
      - ./haproxy/certs/:/etc/ssl/certs/
    networks:
      - default
